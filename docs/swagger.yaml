definitions:
  models.CreateRssBody:
    properties:
      link:
        type: string
    required:
    - link
    type: object
  models.CreateUserBody:
    properties:
      avatar:
        type: string
      email:
        type: string
      password:
        maxLength: 75
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.RssFeed:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      link:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.SigninBody:
    properties:
      email:
        type: string
      password:
        maxLength: 75
        type: string
    required:
    - email
    - password
    type: object
  models.User:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.UserWithAuth:
    properties:
      auth_token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  response.Response:
    properties:
      data: {}
      message:
        type: string
    type: object
  response.RssFeed:
    properties:
      data:
        $ref: '#/definitions/models.RssFeed'
      message:
        type: string
    type: object
  response.RssFeeds:
    properties:
      data:
        items:
          $ref: '#/definitions/models.RssFeed'
        type: array
      message:
        type: string
    type: object
  response.User:
    properties:
      data:
        $ref: '#/definitions/models.User'
      message:
        type: string
    type: object
  response.UserWithAuth:
    properties:
      data:
        $ref: '#/definitions/models.UserWithAuth'
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /feed:
    get:
      consumes:
      - application/json
      description: Retrieve all RSS Feeds in the database.
      produces:
      - application/json
      responses:
        "200":
          description: RSS Feeds found
          schema:
            $ref: '#/definitions/response.RssFeeds'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: RSS Feed not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Find all RSS feeds
      tags:
      - rss
    post:
      consumes:
      - application/json
      description: Create a new RSS feed by providing the feed's name and link.
      parameters:
      - description: Create a new RSS feed
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateRssBody'
      produces:
      - application/json
      responses:
        "201":
          description: RSS Feed created
          schema:
            $ref: '#/definitions/response.RssFeed'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Unable to create feed
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new RSS feed
      tags:
      - rss
  /feed/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing RSS feed using its unique ID.
      parameters:
      - description: ID of the RSS feed to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: RSS Feed deleted
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: RSS Feed not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete an RSS feed by its ID
      tags:
      - rss
    get:
      consumes:
      - application/json
      description: Retrieve an existing RSS feed using its unique ID.
      parameters:
      - description: ID of the RSS feed to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: RSS Feed found
          schema:
            $ref: '#/definitions/response.RssFeed'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: RSS Feed not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Find an RSS feed by its ID
      tags:
      - rss
  /signin:
    post:
      consumes:
      - application/json
      description: signin to an existing account
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.SigninBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserWithAuth'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: sign in
      tags:
      - account
  /signup:
    post:
      consumes:
      - application/json
      description: create a new account
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: sign up
      tags:
      - account
swagger: "2.0"
